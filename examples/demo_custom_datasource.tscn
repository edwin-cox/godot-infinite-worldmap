[gd_scene load_steps=5 format=3 uid="uid://dhmvocsrhk640"]

[ext_resource type="Script" path="res://addons/procedural_world_map/worldmap.gd" id="1_klp76"]

[sub_resource type="GDScript" id="GDScript_7ccps"]
script/source = "extends Control

# Example of a world renderer with a custom datasource that renders an infinite checkerboard

const CheckerboardDS=preload(\"res://examples/checkerboard_datasource.gd\")

@onready var worldmap=$WorldMap

# set the custom datasource
func _ready():
	worldmap.datasource=CheckerboardDS.new()
	worldmap.refresh()

# basic controls to browse through the map and zoom in/out
func _process(delta):
	var map_changed=false
	var offset_change:=Vector2.ZERO
	if Input.is_action_pressed(\"ui_up\"):
		offset_change.y=-1
	elif Input.is_action_pressed(\"ui_down\"):
		offset_change.y=1
	
	if Input.is_action_pressed(\"ui_left\"):
		offset_change.x=-1
	elif Input.is_action_pressed(\"ui_right\"):
		offset_change.x=1
	
	if Input.is_action_pressed(\"zoom_out\"):
		worldmap.zoom*=0.9
		map_changed=true
	elif Input.is_action_pressed(\"zoom_in\"):
		worldmap.zoom*=1.1
		map_changed=true
	
	if map_changed or offset_change != Vector2.ZERO:
		worldmap.coordinates+=offset_change*10*worldmap.relative_zoom_factor
		worldmap.refresh()


"

[sub_resource type="Shader" id="Shader_75fh8"]
code = "
shader_type canvas_item;
uniform sampler2D DATA;
uniform vec4 tint;

void fragment() {
	COLOR = texture(DATA, UV) * tint; 
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_pkmsb"]
shader = SubResource("Shader_75fh8")
shader_parameter/tint = null

[node name="DemoCheckboard" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_7ccps")

[node name="WorldMap" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_pkmsb")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
script = ExtResource("1_klp76")
incremental_quality = true
zoom = 1.0
